
name: Build Apps

on: [ 'workflow_dispatch' ]

jobs:
  build_windows_app:
    runs-on: 'windows-latest'
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Create a new virtual environment
        run: |
          python -m venv app_env
          .\app_env\Scripts\activate.bat

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build the executable with PyInstaller
        run: pyinstaller --clean main.spec

      - name: Upload executable as artifact
        uses: actions/upload-artifact@v1
        with:
          name: windows_executable
          path: dist/main.exe

      - name: Bump version
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a new release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: Windows App - ${{ steps.tag_version.outputs.new_tag }}
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload executable to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/main.exe
          asset_name: windows_app.exe
          asset_content_type: application/vnd.microsoft.portable-executable

  build_linux_app:
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build the executable with PyInstaller
        run: pyinstaller --clean main.spec

      - name: Upload executable as artifact
        uses: actions/upload-artifact@v1
        with:
          name: linux_executable
          path: dist/main

      - name: Bump version
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a new release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: Linux App - ${{ steps.tag_version.outputs.new_tag }}
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload executable to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/main
          asset_name: main
          asset_content_type: application/x-executable

